{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Web ve Mobil Prog\\\\Desktop\\\\React102\\\\beginreact102\\\\src\\\\components\\\\collapse.js\";\nimport React, { Component } from \"react\"; // export const Collapse = (props) => {\n//     console.log(props.children);\n//   return (\n//     <div>\n//       <p>\n//         <a\n//           className=\"btn btn-primary w-100\"\n//           data-bs-toggle=\"collapse\"\n//           href={\"#\"+props.href}\n//           role=\"button\"\n//           aria-expanded=\"false\"\n//           aria-controls=\"collapseExample\"\n//         >\n//           {props.children.props.cardTitle}\n//         </a>\n//       </p>\n//       <div className=\"collapse show\" id={props.href}>\n//          {props.children}\n//       </div>\n//     </div>\n//   );\n// };\n// Extends=> component clasısındaki tüm özellikleri collapse classına miras verir\n// Render metodu Component classının bir metodudur\n//Component olusurken ilk calısacak metod constructor oldugundan Stateleri constructorda yazabiliriz\n// Propslar immutable yani degistirilemezler.Stateler ise mutable yani degistirilebilir.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Collapse extends Component {\n  constructor() {\n    super();\n\n    this.showMore = () => {\n      this.setState({\n        isOpen: !this.state.isOpen,\n        showContent: \"Card Kapali\"\n      });\n    };\n\n    this.state = {\n      showContent: \"Card Acik\",\n      isOpen: true\n    }; //this.showMore=this.showMore.bind(this); //showmore thisi çözümleyemedigi icin kolay bi yol\n  } // functional fonksiyon yazdıgımızda this keywordu tanımlayamadıgımdan setState metodunu kullanamıyoruz.Bu durumun düzelmesi için constructora this metodunu bind yöntemiyle tanıtmamız gerekiyor.\n  // showMore(){\n  //   this.setState=({\n  //     isOpen:false,\n  //     showContent:\"Card Kapali\",\n  //   });\n  // }\n  // Arrow function tanımlayamadıgı keyword icin bir ust scope'a giderek this keywordunu orada tanımlayıp kullanabiliyor.\n  // State metodu ile olan bir state e yeni bir deger atamak istedigimizde js tarafında sikinti cikmadan calisabiliyor.Ancak react tarafı state komutuyla render islemini ikinci kez tetikleyemediginden state guncellemesini yapamıyor.Bu işlem için setState metodu kullanmalıyız çünkü bu metod çalıstıgında render metodu da tetikleniyor.\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary w-100\",\n        onClick: this.showMore,\n        children: React.Children.map(this.props.children, child => child.props.cardTitle)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), this.state.isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collapse show\",\n        children: [this.props.children, this.state.showContent]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.showContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Web ve Mobil Prog/Desktop/React102/beginreact102/src/components/collapse.js"],"names":["React","Component","Collapse","constructor","showMore","setState","isOpen","state","showContent","render","Children","map","props","children","child","cardTitle"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,OAAQ,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AACvCE,EAAAA,WAAW,GAAE;AACX;;AADW,SAkBbC,QAlBa,GAkBF,MAAM;AACf,WAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAC,CAAC,KAAKC,KAAL,CAAWD,MADP;AAEZE,QAAAA,WAAW,EAAC;AAFA,OAAd;AAID,KAvBY;;AAEX,SAAKD,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAC,WADD;AAEXF,MAAAA,MAAM,EAAC;AAFI,KAAb,CAFW,CAMX;AACD,GARsC,CASvC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAOAG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BAEI;AACE,QAAA,SAAS,EAAC,uBADZ;AACoC,QAAA,OAAO,EAAE,KAAKL,QADlD;AAAA,kBAMGJ,KAAK,CAACU,QAAN,CAAeC,GAAf,CAAmB,KAAKC,KAAL,CAAWC,QAA9B,EAAwCC,KAAD,IAASA,KAAK,CAACF,KAAN,CAAYG,SAA5D;AANH;AAAA;AAAA;AAAA;AAAA,cAFJ,EAWG,KAAKR,KAAL,CAAWD,MAAX,gBAED;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,mBAKI,KAAKM,KAAL,CAAWC,QALf,EAMI,KAAKN,KAAL,CAAWC,WANf;AAAA;AAAA;AAAA;AAAA;AAAA,cAFC,gBASQ;AAAA,kBAAM,KAAKD,KAAL,CAAWC;AAAjB;AAAA;AAAA;AAAA;AAAA,cApBX;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD;;AAlDsC","sourcesContent":["import React,{Component} from \"react\";\r\n\r\n// export const Collapse = (props) => {\r\n//     console.log(props.children);\r\n//   return (\r\n//     <div>\r\n//       <p>\r\n//         <a\r\n//           className=\"btn btn-primary w-100\"\r\n//           data-bs-toggle=\"collapse\"\r\n//           href={\"#\"+props.href}\r\n//           role=\"button\"\r\n//           aria-expanded=\"false\"\r\n//           aria-controls=\"collapseExample\"\r\n//         >\r\n//           {props.children.props.cardTitle}\r\n//         </a>\r\n\r\n        \r\n//       </p>\r\n//       <div className=\"collapse show\" id={props.href}>\r\n//          {props.children}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// Extends=> component clasısındaki tüm özellikleri collapse classına miras verir\r\n// Render metodu Component classının bir metodudur\r\n//Component olusurken ilk calısacak metod constructor oldugundan Stateleri constructorda yazabiliriz\r\n// Propslar immutable yani degistirilemezler.Stateler ise mutable yani degistirilebilir.\r\n\r\nexport  class Collapse extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      showContent:\"Card Acik\",\r\n      isOpen:true,\r\n    };\r\n    //this.showMore=this.showMore.bind(this); //showmore thisi çözümleyemedigi icin kolay bi yol\r\n  }\r\n  // functional fonksiyon yazdıgımızda this keywordu tanımlayamadıgımdan setState metodunu kullanamıyoruz.Bu durumun düzelmesi için constructora this metodunu bind yöntemiyle tanıtmamız gerekiyor.\r\n  // showMore(){\r\n  //   this.setState=({\r\n  //     isOpen:false,\r\n  //     showContent:\"Card Kapali\",\r\n  //   });\r\n  // }\r\n\r\n  // Arrow function tanımlayamadıgı keyword icin bir ust scope'a giderek this keywordunu orada tanımlayıp kullanabiliyor.\r\n  // State metodu ile olan bir state e yeni bir deger atamak istedigimizde js tarafında sikinti cikmadan calisabiliyor.Ancak react tarafı state komutuyla render islemini ikinci kez tetikleyemediginden state guncellemesini yapamıyor.Bu işlem için setState metodu kullanmalıyız çünkü bu metod çalıstıgında render metodu da tetikleniyor.\r\n  showMore = () => {\r\n    this.setState({\r\n      isOpen:!this.state.isOpen,\r\n      showContent:\"Card Kapali\",\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n       \r\n          <button\r\n            className=\"btn btn-primary w-100\" onClick={this.showMore}\r\n            \r\n          >\r\n            {/* {this.props.children.props.cardTitle}\r\n            {console.log(this.props.children.props.cardTitle)} */}\r\n            {React.Children.map(this.props.children,(child)=>child.props.cardTitle)}\r\n          </button>\r\n  \r\n        {this.state.isOpen ?( \r\n       \r\n        <div className=\"collapse show\">\r\n         \r\n\r\n\r\n\r\n           {this.props.children}\r\n           {this.state.showContent}\r\n        </div>):(<div>{this.state.showContent}</div>)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}